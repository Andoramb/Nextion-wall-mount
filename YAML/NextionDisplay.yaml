esphome:
  name: nextiondisplay
  platform: ESP8266
  board: d1_mini

wifi:
  ssid: !secret ssid
  password: !secret password
  fast_connect: true
  
logger:
api:
ota:

# Automation handling the display brightness based on sunset/sunrise (not only init)

sun:
  latitude: !secret latitude
  longitude: !secret longitude
  on_sunset:   
    - elevation: -5
      then:
        - lambda: 'id(glob_sunelevation) = "40";'
  on_sunrise:
    - elevation: -1
      then:
        - lambda: 'id(glob_sunelevation) = "90";'

time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Stockholm

globals:
  - id: glob_morning_active             # Morning Routine start time
    type: std::string

  - id: glob_wifistat                   # Wifi status written to the display
    type: std::string

  - id: glob_today_icon                 # Today's weather icon number, that is requested on the display
    type: int

  - id: glob_sunelevation               # Display Brightness depending on sun elevation
    type: std::string

  - id: glob_raintext                   # Display if it's gonna rain in 8h
    type: std::string

  - id: glob_kitchenlight               # Global Kitchen light state
    type: std::string

  - id: glob_livinglight                # Global Livingroom light state
    type: std::string
 
  - id: glob_bedlight                   # Global Bedroom light state
    type: std::string
    
  - id: glob_kodivolume                 # Global Kodi Volume
    type: std::string
    

# Uart port definition - This works OK, but also HW UART0 works if Logs are disabled or changed to UART1
uart:
  rx_pin: D4   
  tx_pin: D3   
  baud_rate: 9600

display:
  - platform: nextion
    id: nextiondisplay
    update_interval: 60s  #on final version this needs to be set to 30-60s - valid for every page
    lambda: |-
    
            it.send_command_printf("dim=%s", id(glob_sunelevation).c_str());
            
            
            if (id(page1).state) {
                      it.set_component_text_printf("intemp","%f.0",id(temperature_inside).state);
                      it.set_component_text_printf("outtemp","%f.0",id(temperature_outside).state);
                      it.send_command_printf("%s.pic=%i", "weather",id(glob_today_icon));
                      it.set_component_text_printf("fb","%s",id(today_facebook).state.c_str());
                      it.set_component_text_printf("fbevent","%s",id(today_facebookevents).state.c_str());
                      it.set_component_text_printf("google","%s",id(today_google).state.c_str());
                      auto time = id(sntp_time).now();
                      it.set_component_text_printf("time","%02d:%02d",time.hour,time.minute);
                      it.set_component_text_printf("date","%02d.%02d",time.month,time.day_of_month);
                      it.set_component_text_printf("rain","%s",id(glob_raintext).c_str());
            }
            if (id(page2).state) {
                      it.send_command_printf("bt0.val=%s", id(glob_kitchenlight).c_str());
                      it.send_command_printf("bt1.val=%s", id(glob_livinglight).c_str());
                      it.send_command_printf("bt2.val=%s", id(glob_bedlight).c_str());
            
            
            }
            if (id(page3).state) {
                it.set_component_text_printf("vol","%s",id(glob_kodivolume).c_str());
            
            }
            if (id(page4).state) {
            
            
            }
            if (id(page5).state) {
                      it.set_component_text_printf("ontime","%s",id(glob_morning_active).c_str());
                      it.set_component_text_printf("wifistat","%s",id(glob_wifistat).c_str());
            
            }
            if (id(page6).state) {

            
            }
            if (id(page7).state) {
                      auto time = id(sntp_time).now();
                      it.set_component_text_printf("time","%02d:%02d",time.hour,time.minute);
               
            }


    
# This part is handling the passive buzzer beep on touch - From here
    
script:
  - id: beepscript
    then:
      - switch.turn_on: TouchBuzzer
      - delay: 0.05s
      - switch.turn_off: TouchBuzzer

switch:
  - platform: output
    id: TouchBuzzer
    name: "TouchBuzzer"
    output: 'buzzer'

output:
  - platform: esp8266_pwm
    pin: D2
    id: 'buzzer'
    frequency: 500

# This part is handling the passive buzzer beep on touch - 'Til here


## --------------------  TEXT SENSORS from HA  --------------------
#    some sensor data is formatted as text/string, so they cannot be regular imported as regular sensors


text_sensor:
  - platform: homeassistant
    id: today_facebook
    entity_id: sensor.facebook
    
  - platform: homeassistant
    id: today_facebookevents
    entity_id: sensor.facebookevents
    
  - platform: homeassistant
    id: today_google
    entity_id: sensor.google
    
  - platform: homeassistant
    id: morning_on_time
    entity_id: input_datetime.livingroom_time_on
    
  - platform: homeassistant   # Kitchen Light state
    id: table_lightstext
    entity_id: light.table_light
    on_value:
       then:
         - if:
            condition:
              lambda: 'return (id(table_lightstext).state == "on");'
            then:
              - lambda: |-
                          id(glob_kitchenlight) = "1";
                          id(nextiondisplay).send_command_no_ack("bt0.val=1");
            else:
              - lambda: |-
                          id(glob_kitchenlight) = "0";
                          id(nextiondisplay).send_command_no_ack("bt0.val=0");
      
  - platform: homeassistant   # Livingroom Light state
    id: livingroom_lightstext
    entity_id: light.living_room_lights
    on_value:
       then:
         - if:
            condition:
              lambda: 'return (id(livingroom_lightstext).state == "on");'
            then:
              - lambda: |-
                          id(glob_livinglight) = "1";
                          id(nextiondisplay).send_command_no_ack("bt1.val=1");
            else:
              - lambda: |-
                          id(glob_livinglight) = "0";
                          id(nextiondisplay).send_command_no_ack("bt1.val=0");
      
  - platform: homeassistant   # Kitchen Light state
    id: bedroom_lightstext
    entity_id: light.bedroom_lights
    on_value:
       then:
         - if:
            condition:
              lambda: 'return (id(bedroom_lightstext).state == "on");'
            then:
              - lambda: |-
                          id(glob_bedlight) = "1";
                          id(nextiondisplay).send_command_no_ack("bt2.val=1");
            else:
              - lambda: |-
                          id(glob_bedlight) = "0";
                          id(nextiondisplay).send_command_no_ack("bt2.val=0");
                          
  - platform: homeassistant   # Kodi volume
    id: kodi_volume
    entity_id: sensor.kodi_volume
    on_value:
       then:
         - lambda: 'id(glob_kodivolume) = id(kodi_volume).state.c_str();'
         - component.update: nextiondisplay
         
  - platform: homeassistant   # Home Assistant sensor controlling display sleep in case nobody is home
    id: somebody_home
    entity_id: group.all_devices
    on_value:
       then:
         - if:
            condition:
              lambda: 'return (id(somebody_home).state == "not_home");'
            then:
              - lambda: 'id(nextiondisplay).send_command_no_ack("sleep=1");'
            else:
              - lambda: 'id(nextiondisplay).send_command_no_ack("sleep=0");'

  - platform: homeassistant   # Home Assistant sensor controlling display sleep in case nobody is home
    id: raw_command
    entity_id: input_text.nextioncommand


## --------------------  SENSORS from HA  --------------------
#  usually numeric states can go here

sensor:
  - platform: homeassistant   # Buzzer Frequency imported from HA for the Buzzer component
    id: frequency
    entity_id: input_number.frequency
    on_value:
      then:
        - output.set_level:
            id: buzzer
            level: !lambda 'return id(frequency).state;'
        - output.esp8266_pwm.set_frequency:
            id: buzzer
            frequency: !lambda 'return id(frequency).state;'
        - script.execute: beepscript   
        
        
  - platform: homeassistant   # Inside temperature
    id: temperature_inside
    entity_id: sensor.living_room_temperature
    accuracy_decimals: 0
    on_value:
       then:
         - component.update: nextiondisplay

  - platform: homeassistant   # Outside temperature
    id: temperature_outside
    entity_id: sensor.weather_temperature
    accuracy_decimals: 0
    on_value:
       then:
         - component.update: nextiondisplay

  - platform: homeassistant   # Forecast precipitation
    entity_id: sensor.weather_precipitation
    id: today_rain
    on_value:
       then:
         - if:
            condition:
              lambda: 'return (id(today_rain).state > 0);'
            then:
              lambda: 'id(glob_raintext)="Rain";'
            else:
              lambda: 'id(glob_raintext)="No rain";'
         - component.update: nextiondisplay

  - platform: homeassistant   # Forecast icon
    id: weather_symbol
    entity_id: sensor.weather_symbol
    on_value:
       then:                  # The numbers here may change on different picture import order in Nextion or USART HMI
         - if:
            condition:
              lambda: 'return (id(weather_symbol).state >= 1 && id(weather_symbol).state <= 15);'
            then:
              lambda: 'id(glob_today_icon) = id(weather_symbol).state + 24;'
         - if:
            condition:
              lambda: 'return (id(weather_symbol).state >= 20 && id(weather_symbol).state <= 34);'
            then:
              lambda: 'id(glob_today_icon) = id(weather_symbol).state + 20;'
         - if:
            condition:
              lambda: 'return (id(weather_symbol).state >= 40);'
            then:
              lambda: 'id(glob_today_icon) = id(weather_symbol).state + 15;'
         - component.update: nextiondisplay



## --------------------  BINARY SENSORS  --------------------
#  binary sensors here are both from Nextion and HA. ESPHOME currently can read only binary sensors from Nextion

binary_sensor:

  - platform: status
    name: "Nextion Display Status"
    id: displaystatus
    on_state:       # based on wifi connection, we set the global variable here. This way it will be stored and valid upon refresh
      - if:
          condition:
            wifi.connected:
          then:
            - lambda: 'id(glob_wifistat) = "Wifi is Connected";'
          else:
            - lambda: 'id(glob_wifistat) = "Wifi not Connected";'
      - if:
          condition:
            sun.is_above_horizon:
          then:
            - lambda: 'id(glob_sunelevation) = "90";'
          else:
            - lambda: 'id(glob_sunelevation) = "40";'       
            
            
            
            



# Because currently it is not possible to read (sensor) values from Nextion, page navigation is done with binary sensors

  # 1. page - Overview
  - platform: nextion
    page_id: 0
    component_id: 2
    id: page1
    on_press:
      then:
        - component.update: nextiondisplay
        - script.execute: beepscript

  # 2. page - Lights
  - platform: nextion
    page_id: 1
    component_id: 2
    id: page2
    on_press:
      then:
        - component.update: nextiondisplay
        - script.execute: beepscript

  # 3. page - Media
  - platform: nextion
    page_id: 2
    component_id: 3
    id: page3
    on_press:
      then:
        - component.update: nextiondisplay
        - script.execute: beepscript

  # 4. page - Vacuum Cleaner
  - platform: nextion
    page_id: 3
    component_id: 5
    id: page4
    on_press:
      then:
        - component.update: nextiondisplay
        - script.execute: beepscript

  # 5. page - Automations and settings
  - platform: nextion
    page_id: 4
    component_id: 5
    id: page5
    on_press:
      then:
        - component.update: nextiondisplay
        - script.execute: beepscript

  # 6. page - Developer settings
  - platform: nextion
    page_id: 5
    component_id: 7
    id: page6
    on_press:
      then:
        - component.update: nextiondisplay
        - script.execute: beepscript

  # . page - Screensaver
  - platform: nextion
    page_id: 6
    component_id: 1
    id: page7
    on_press:
      then:
        - component.update: nextiondisplay
        - script.execute: beepscript



## ----------------------------------------------------------------------------------------------------
## -------- Start definition of each binary sensor from Nextion, that esphome reacts with  ------------

#
#PAGE 0 - Overview
#

  # HI - welcome home Button
  - platform: nextion
    page_id: 0
    component_id: 21
    id: hi
    on_press:
      then:
        - homeassistant.service:
            service: light.turn_on
            data:
              entity_id: 
                group.livingroom_lights
                light.windowlights
                light.wall_lights
        - homeassistant.service:
            service: script.1555864273339   # Move camera to OFF position
        - script.execute: beepscript  

# ByeBye Button
  - platform: nextion
    page_id: 0
    component_id: 20
    id: bye
    on_press:
      then:
        - homeassistant.service:
            service: light.turn_off
            data:
              entity_id: group.all_lights
        - homeassistant.service:
            service: switch.turn_off
            data:
              entity_id: group.all_switches.
        - homeassistant.service:
            service: script.1567332436215  # Move camera to ON position
        - script.execute: beepscript

  # Media play/pause button
  - platform: nextion
    page_id: 0
    component_id: 13
    id: media
    on_press:
      then:
        - homeassistant.service:
            service: media_player.media_play_pause
            data:
              entity_id: media_player.kodi
        - script.execute: beepscript

#
#PAGE 1 - Lights
#
  # Kitchen Light toggle
  - platform: nextion
    page_id: 1
    component_id: 9
    id: kitchen
    on_press:
      then:
        - homeassistant.service:
            service: light.turn_on
            data:
              entity_id: light.table_light
        - script.execute: beepscript
    on_release:
      then:
        - homeassistant.service:
            service: light.turn_off
            data:
              entity_id: light.table_light
        - script.execute: beepscript

  # Livingroom Lights toggle
  - platform: nextion
    page_id: 1
    component_id: 10
    id: living
    filters:
      - delayed_on: 30ms
      - delayed_off: 30ms
    on_press:
      then:
        - homeassistant.service:
            service: light.turn_on
            data:
              entity_id: light.living_room_lights
        - script.execute: beepscript
    on_release:
      then:
        - homeassistant.service:
            service: light.turn_off
            data:
              entity_id: light.living_room_lights
        - script.execute: beepscript

  # Bedroom Lights toggle
  - platform: nextion
    page_id: 1
    component_id: 11
    id: bedroom
    on_press:
      then:
        - homeassistant.service:
            service: light.turn_on
            data:
              entity_id: light.bedroom_lights
        - script.execute: beepscript
    on_release:
      then:
        - homeassistant.service:
            service: light.turn_off
            data:
              entity_id: light.bedroom_lights
        - script.execute: beepscript

#
#PAGE 2 - Media
#
  # Radio Station 1 button
  - platform: nextion
    page_id: 2
    component_id: 9
    id: radio1
    on_press:
      then:
        - homeassistant.service:
            service: media_player.play_media
            data:
              entity_id: media_player.kodi
              media_content_id: http://risefm1.stereoplayer.hu:8080/risefm_hq
              media_content_type: music
        - script.execute: beepscript

  # Radio Station 2 button
  - platform: nextion
    page_id: 2
    component_id: 10
    id: radio2
    on_press:
      then:
        - homeassistant.service:
            service: media_player.play_media
            data:
              entity_id: media_player.kodi
              media_content_id: http://mr-stream.mediaconnect.hu/4738/mr2.mp3
              media_content_type: music
        - script.execute: beepscript

  # Radio Station 3 button
  - platform: nextion
    page_id: 2
    component_id: 11
    id: radio3
    on_press:
      then:
        - homeassistant.service:
            service: media_player.play_media
            data:
              entity_id: media_player.kodi
              media_content_id: http://stream.radiomost.hu:8200/live.mp3
              media_content_type: music
        - script.execute: beepscript

  # Radio Station 4 button
  - platform: nextion
    page_id: 2
    component_id: 12
    id: radio4
    on_press:
      then:
        - homeassistant.service:
            service: media_player.play_media
            data:
              entity_id: media_player.kodi
              media_content_id: http://rc.radiogaga.ro:8000/live
              media_content_type: music
        - script.execute: beepscript

  # Radio Station 5 button
  - platform: nextion
    page_id: 2
    component_id: 13
    id: radio5
    on_press:
      then:
        - homeassistant.service:
            service: media_player.play_media
            data:
              entity_id: media_player.kodi
              media_content_id: https://sverigesradio.se/topsy/direkt/tunein/1607-hi.mp3
              media_content_type: music
        - script.execute: beepscript

  # Radio Station 6 button
  - platform: nextion
    page_id: 2
    component_id: 14
    id: radio6
    on_press:
      then:
        - homeassistant.service:
            service: media_player.play_media
            data:
              entity_id: media_player.kodi
              media_content_id: http://96.31.83.86:8205/LATINO%2099%20FM
              media_content_type: music
        - script.execute: beepscript

  # Decrease Volume
  - platform: nextion
    page_id: 2
    component_id: 15
    id: voldown
    on_press:
      then:
        - homeassistant.service:
            service: media_player.volume_down
            data:
              entity_id: media_player.kodi
        - component.update: nextiondisplay
        - script.execute: beepscript

  # Increase Volume
  - platform: nextion
    page_id: 2
    component_id: 16
    id: volup
    on_press:
      then:
        - homeassistant.service:
            service: media_player.volume_up
            data:
              entity_id: media_player.kodi
        - component.update: nextiondisplay
        - script.execute: beepscript

  # Media play/pause button
  - platform: nextion
    page_id: 2
    component_id: 7
    id: media2
    on_press:
      then:
        - homeassistant.service:
            service: media_player.media_play_pause
            data:
              entity_id: media_player.kodi
        - script.execute: beepscript

  # Media Stop button
  - platform: nextion
    page_id: 2
    component_id: 6
    id: mediastop
    on_press:
      then:
        - homeassistant.service:
            service: media_player.media_stop
            data:
              entity_id: media_player.kodi
        - script.execute: beepscript


#
#PAGE 3 - Consuela
#
  # Consuela Lower Fan Speed
  - platform: nextion
    page_id: 3
    component_id: 13
    id: speedlow
    on_press:
      then:
        - homeassistant.service:
            service: input_number.decrement
            data:
              entity_id: input_number.consuelaspeed
        - script.execute: beepscript

  # Consuela Increase Fan Speed
  - platform: nextion
    page_id: 3
    component_id: 14
    id: speedhigh
    on_press:
      then:
        - homeassistant.service:
            service: input_number.increment
            data:
              entity_id: input_number.consuelaspeed
        - script.execute: beepscript


  # Consuela Kitchen Quick
  - platform: nextion
    page_id: 3
    component_id: 8
    id: consuelakitchenquick
    on_press:
      then:
        - homeassistant.service:
            service: script.turn_on
            data:
              entity_id: script.1555171803610
        - script.execute: beepscript

  # Consuela Kitchen
  - platform: nextion
    page_id: 3
    component_id: 7
    id: consuelakitchen
    on_press:
      then:
        - homeassistant.service:
            service: script.turn_on
            data:
              entity_id: script.1555171803611
        - script.execute: beepscript

  # Consuela Livingroom
  - platform: nextion
    page_id: 3
    component_id: 10
    id: consuelalivingroom
    on_press:
      then:
        - homeassistant.service:
            service: script.turn_on
            data:
              entity_id: script.1555171803612
        - script.execute: beepscript

  # Consuela Bedroom
  - platform: nextion
    page_id: 3
    component_id: 11
    id: consuelabedroom
    on_press:
      then:
        - homeassistant.service:
            service: script.turn_on
            data:
              entity_id: script.1555171803613
        - script.execute: beepscript

  # Consuela Entry
  - platform: nextion
    page_id: 3
    component_id: 9
    id: consuelaentry
    on_press:
      then:
        - homeassistant.service:
            service: script.turn_on
            data:
              entity_id: script.1555171803609
        - script.execute: beepscript

  # Consuela Go Home
  - platform: nextion
    page_id: 3
    component_id: 16
    id: consgohome
    on_press:
      then:
        - homeassistant.service:
            service: script.turn_on
            data:
              entity_id: script.1565813738674
        - script.execute: beepscript

  # Consuela Go To TrashSpot
  - platform: nextion
    page_id: 3
    component_id: 15
    id: constrashspot
    on_press:
      then:
        - homeassistant.service:
            service: script.turn_on
            data:
              entity_id: script.1565813738674
        - script.execute: beepscript

  # Consuela Pause
  - platform: nextion
    page_id: 3
    component_id: 19
    id: conspause
    on_press:
      then:
        - homeassistant.service:
            service: vacuum.pause
            data:
              entity_id: vacuum.rockrobo
        - script.execute: beepscript
    on_release:
      then:
        - homeassistant.service:
            service: vacuum.start
            data:
              entity_id: vacuum.rockrobo
        - script.execute: beepscript

  # Consuela Speak
  - platform: nextion
    page_id: 3
    component_id: 17
    id: speak
    on_press:
      then:
        - homeassistant.service:
            service: vacuum.locate
            data:
              entity_id: vacuum.rockrobo

  # Consuela Swear
  - platform: nextion
    page_id: 3
    component_id: 18
    id: swear
    on_press:
      then:
        - homeassistant.service:
            service: script.turn_on
            data:
              entity_id: script.1555864273341

  # Consuela Music
  - platform: nextion
    page_id: 3
    component_id: 12
    id: consumusic
    on_press:
      then:
        - homeassistant.service:
            service: script.1564844497457
        - script.execute: beepscript
    on_release:
      then:
        - homeassistant.service:
            service: script.1564844518034
        - script.execute: beepscript


#
#PAGE 4 - Automations / Settings
#

####
# It would be nice to add the plug timer to the screen
####
  # Kitchen Plug toggle
  - platform: nextion
    page_id: 4
    component_id: 11
    id: kitchenplug
    on_press:
      then:
        - homeassistant.service:
            service: switch.turn_on
            data:
              entity_id: switch.sonoff_1_kitchen
        - script.execute: beepscript
    on_release:
      then:
        - homeassistant.service:
            service: switch.turn_off
            data:
              entity_id: switch.sonoff_1_kitchen
        - script.execute: beepscript

  # Morning Routine
  - platform: nextion
    page_id: 4
    component_id: 7
    id: morningroutine
    on_press:
      then:
        - homeassistant.service:
            service: automation.turn_on
            data:
              entity_id: automation.morning_routine
        - lambda: 'id(glob_morning_active) = id(morning_on_time).state.c_str();'
        - script.execute: beepscript
        - component.update: nextiondisplay
    on_release:
      then:
        - homeassistant.service:
            service: automation.turn_off
            data:
              entity_id: automation.morning_routine
        - lambda: 'id(glob_morning_active)= " ";'
        - script.execute: beepscript
        - component.update: nextiondisplay
